plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'kotlin-android'

    id("dagger.hilt.android.plugin")
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}
dependencies {
    implementation("com.google.dagger:hilt-android:2.42")
    kapt("com.google.dagger:hilt-android-compiler:2.38.1")
}
kapt {
    correctErrorTypes = true
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.yigitkula.pokemonlistapp"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    dataBinding{
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'com.google.firebase:firebase-crashlytics-ktx:18.2.12'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1'
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:30.3.1')

    // Declare the dependencies for the desired Firebase products without specifying versions
    // For example, declare the dependencies for Firebase Authentication and Cloud Firestore
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore'
    implementation 'com.google.firebase:firebase-analytics-ktx:21.1.0'
    implementation 'com.google.firebase:firebase-common-ktx:20.1.1'
    implementation 'com.google.firebase:firebase-analytics:21.1.0'
    def lifeCycleExtensionVersion = '1.1.1'
    def supportVersion = '28.0.0'
    def retrofitVersion = '2.9.0'
    def glideVersion = '4.13.2'
    def rxJavaVersion = '2.1.1'
    def roomVersion = '2.4.3'
    def navVersion = '2.5.1'
    def preferencesVersion = '1.2.0'
    def paletteVersion = '1.0.0'
    def materialVersion ='1.6.1'
    def lifecycle_version = "2.2.0-rc02"

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'



    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"

    roomVersion = '2.4.3'
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1"

    implementation "androidx.navigation:navigation-fragment-ktx:$navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxJavaVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"

    implementation "androidx.palette:palette-ktx:$paletteVersion"
    implementation "com.google.android.material:material:$materialVersion"

    implementation "androidx.preference:preference-ktx:$preferencesVersion"

    implementation "androidx.test:core:1.4.0"
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.robolectric:robolectric:4.8.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "org.mockito:mockito-core:4.7.0"
    testImplementation 'com.squareup.retrofit2:retrofit:2.9.0'
    // lib for parsing JSON api responses
    testImplementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    // Android Test Implementations
    androidTestImplementation "junit:junit:4.13.2"
    //androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.12.1"
    androidTestImplementation "org.mockito:mockito-android:4.7.0"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "org.mockito:mockito-core:4.7.0"
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.43.2'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.43.2'
    debugImplementation "androidx.fragment:fragment-testing:1.6.0-alpha01"

    androidTestImplementation("androidx.test.espresso:espresso-contrib:3.4.0") {
        exclude group : "org.checkerframework", module : "checker"
    }
}
